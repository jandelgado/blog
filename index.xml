<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JDBlog</title><link>https://jandelgado.github.io/blog/</link><description>Recent content on JDBlog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 17 Mar 2024 13:57:32 +0100</lastBuildDate><atom:link href="https://jandelgado.github.io/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>Atari XL tape preservation and autopsy</title><link>https://jandelgado.github.io/blog/posts/atari-xl-tape-preservation/</link><pubDate>Sun, 17 Mar 2024 13:57:32 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/atari-xl-tape-preservation/</guid><description>My first-ever computer was the Atari 600XL with an Atari 1010 Datasette. Recently I stumbled upon some old cassette tapes, one of which I used with my Atari (while the others were utilized with my Sharp MZ-800, which I will cover in a later story). Let&amp;rsquo;s see if I can recover the data from the tape after such a long time&amp;hellip;
Some of my old, heavily used, cassette tapes Cassette tape inlay with tape counter positions of the individual programs My plan is as follows: 1.</description></item><item><title>Clipboard with VNC, libvirt and Qemu</title><link>https://jandelgado.github.io/blog/posts/vnc-clipboard/</link><pubDate>Sat, 30 Dec 2023 17:53:39 +0200</pubDate><guid>https://jandelgado.github.io/blog/posts/vnc-clipboard/</guid><description>One real PITA when using virtual machines is getting things like clipboard, graphics acceleration etc. up and running. This is a common issue I&amp;rsquo;ve encountered with several virtualization products I used in the past (e.g., VirtualBox, VMWare, Qemu).
Recently, RedHat dropped Spice support in RHEL 9 for virt-manager and Qemu. I decided to switch to VNC instead of compiling my own Qemu with built-in Spice support. Since I donâ€™t require USB passthrough, sound, or other Spice-exclusive features, I thought it was worth (again) a try.</description></item><item><title>Porting a Go CLI tool to Web Assembly</title><link>https://jandelgado.github.io/blog/posts/rabtap-wasm/</link><pubDate>Wed, 21 Jun 2023 22:23:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/rabtap-wasm/</guid><description>In this blog post I&amp;rsquo;ll show how to run a golang command line application locally with a web assembly (WASM) runtime.
Background The current release candidate of go 1.21 adds an experimental port of the Web Assembly System Interface (WASI). While the go compiler could compile to WASM before, only the Javascript target was supported, which was targeting browsers.
WASI enables a WASM application to access operating-system features like files and sockets, while being independet of browsers.</description></item><item><title>WifiOnICE @ DB with Linux and my Lenovo X260</title><link>https://jandelgado.github.io/blog/posts/wifionice-linux/</link><pubDate>Mon, 05 Jun 2023 11:45:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/wifionice-linux/</guid><description>Authors dramatization of events I&amp;rsquo;m writing this while travelling with Deutsche Bahn to Munich, when I was haunted by longly forgotten memories of manual WiFi configurations and tweaking sessions: I had a hard time connecting my Lenovo X260 (with Fedora Linux) to the ICE&amp;rsquo;s on-board WiFi network.
First problem: deauthentications First I realized that the my notebook was reconnecting all the time. Digging into syslog (dmesg -w), I saw lots of PREV_AUTH_NOT_VALID messges showing up:</description></item><item><title>Going paperless</title><link>https://jandelgado.github.io/blog/posts/going-paperless/</link><pubDate>Fri, 30 Dec 2022 20:15:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/going-paperless/</guid><description>paperless-ngx Recently I stumbled over this post on Hacker News, which linked to a tool called paperless-ngx.
Paperless-ngx is a web application (based on Python and Django) that let&amp;rsquo;s you easily organize your scanned documents in a self hosted digital archive.
After collecting all sorts of correspondence for decades, I thought using a tool like paperless-ngx would be a welcome occasion to get rid of the tons of outdated documents no longer needed physically, but still having those documents in a digital archive.</description></item><item><title>Dumping old Olivetti M20 Floppy Disks</title><link>https://jandelgado.github.io/blog/posts/olivetti-m20-disk-preservation/</link><pubDate>Wed, 20 Apr 2022 20:58:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/olivetti-m20-disk-preservation/</guid><description>The Olivetti L1 M20 Olivetti L1 M20 Back in the 1980&amp;rsquo;s my uncle owned a company for photo lithography. Eventually they needed a computer for adminstrative tasks and got a rather exotic Olivetti L1 M20. For the curious, the M20 has the following specs:
Zilog Z8001 16 Bit CPU 128kb to 512kb RAM PCOS Operating System Built 1982-1984 512x256 Graphics, 4 or 8 colors, depending on the available memory board in use.</description></item><item><title>Go generics released</title><link>https://jandelgado.github.io/blog/posts/golang-generics-released/</link><pubDate>Wed, 15 Dec 2021 19:03:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/golang-generics-released/</guid><description>Today a first official beta version of go 1.18 was released, which introduces generics to the Go language. This is the most significant change to the language since the release of Go 1. However, it is a backwards compatible change, meaning old code should compile without changes.
Before the release of the 1.18 beta version, you had to compile the go compiler from source in order to experiment with generics. That&amp;rsquo;s now easier, just download the new version here, look in the &amp;ldquo;unstable&amp;rdquo; section.</description></item><item><title>Carl DIY MP3 player for kids</title><link>https://jandelgado.github.io/blog/posts/carl-diy-mp3-player/</link><pubDate>Mon, 09 Aug 2021 21:20:39 +0200</pubDate><guid>https://jandelgado.github.io/blog/posts/carl-diy-mp3-player/</guid><description>Carl music box Carl is a robust DIY MP3 player for kids. I already built Carl back in 2017, but it took until this summer that I also finished an article for the german edition of the Make magazine describing how to build Carl. The case is made of an old wooden box for wine bottles. The MP3 playback and amplification is handled by an DFPlayerMini module, the MP3 files are stored on a mini SD card.</description></item><item><title>3.65x1E6 steps</title><link>https://jandelgado.github.io/blog/posts/walking/</link><pubDate>Fri, 16 Apr 2021 20:30:39 +0200</pubDate><guid>https://jandelgado.github.io/blog/posts/walking/</guid><description>Since mid of March 2020 I am now working remotely from my home &amp;ldquo;office&amp;rdquo;. Since I realized that I even sit more and move less when working from home, I started to walk at least 10000 steps every day. Be it sunny, rainy, snowy, cold or hot, does not matter. Just reaching the 10000 steps matters. That&amp;rsquo;s a good balance to work and gives great opportunity to listening to lot&amp;rsquo;s of podcasts.</description></item><item><title>Using github pages with a private repo</title><link>https://jandelgado.github.io/blog/posts/github-pages-with-private-repo/</link><pubDate>Thu, 18 Mar 2021 14:59:51 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/github-pages-with-private-repo/</guid><description>Normally github pages can only be used with a public repository. But say for example you want to publish a blog, and do not want to have everything available on a public github repo, especially when blog post are still in &amp;ldquo;draft&amp;rdquo; status.
The solution is simple: we use a private repo (blog-private) to keep our blog sources (input to hugo) and whenever we push to the main branch, a github action is triggered that builds the actual hugo site and pushes the files to a public repo which which github pages activated:</description></item><item><title>Dumping old Sharp MZ-800 Floppy Disks</title><link>https://jandelgado.github.io/blog/posts/dumping-sharp-mz-800-floppy-disks/</link><pubDate>Wed, 10 Mar 2021 10:18:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/dumping-sharp-mz-800-floppy-disks/</guid><description>My old sharp MZ-800, needing some brush up. On top the original floppy cable and parts of the MZ-1F19 floppy disk drive, as well as a shugart-adapter. The original case of the MZ-1F19 was misused in the 90ies to host a CD writer an is now lost. After the Atari 600XL, the Sharp MZ-800 was my second computer, back in the 80ies. Since I still had the computer and a box of more 35 year old 5.</description></item><item><title>SAMdisk</title><link>https://jandelgado.github.io/blog/posts/samdisk/</link><pubDate>Fri, 05 Mar 2021 10:58:45 +0100</pubDate><guid>https://jandelgado.github.io/blog/posts/samdisk/</guid><description>SAMDisk is a command line floppy disk utility. It&amp;rsquo;s used to read disks and convert disk images. I used it to convert some old Sharp MZ-800 floppy disks into the extended disk format (EDSK) so I can use them in an emulator.
Homepage: https://simonowen.com/samdisk/ Github: https://github.com/simonowen/samdisk Building latest github version with IPF support The IPF format (image preservation format) is supported in the 4.0 version of SAMdisk. To build SAMdisk from source:</description></item></channel></rss>